{% extends "layout/backEndLayout.html.twig" %}

{% block content %}


<select class="form-select" id="select_room" aria-label="Default select example">
  <option    value="0" >Associees a toutes les classes</option>
   {% for room in rooms %}
        <option {% if app.request.get('id') == room.id %}selected{% endif %}  value={{room.id}}>{{room.name}}</option>
     {% endfor %}
</select>
<div class="row flex-nowrap justify-content-between align-items-center">
    <div class="col-8 pt-1">

        <canvas id="canvas_gender">
        </canvas>
    </div>
    <div class="col-4 pt-1">

        <canvas id="canvas_age_group">
        </canvas>
    </div>
</div>
<div class="row flex-nowrap justify-content-between align-items-center">
     <canvas id="canvas_age_group_gender">

     </canvas>
</div>
{% endblock %}

{% block javascripts %}
  {{ parent() }}

    <script>
      let canvas_gender =$("#canvas_gender"), 
      canvas_age_group =$("#canvas_age_group"),
      canvas_age_group_gender =$("#canvas_age_group_gender"),
      scatterData = {{ scatterData | raw }};
        console.log(scatterData);

       const datasets = [];
       const randomRgbColor = () => {
          let r = Math.floor(Math.random() * 256); // Random between 0-255
          let g = Math.floor(Math.random() * 256); // Random between 0-255
          let b = Math.floor(Math.random() * 256); // Random between 0-255
          return 'rgb(' + r + ',' + g + ',' + b + ')';
      };
       let colors_age_group =[];
      ({{ageGroupsLabel|raw}}).forEach(function(label) {
          colors_age_group.push(randomRgbColor());
      });
           
      

           {% if masculin is defined %}
              datasets.push( {
                  label: "Masculin",
                  data : {{masculin|raw}},
                  fill : false,
                  backgroundColor: randomRgbColor()
            } )
           {% endif %}
          {% if feminin is defined %}
              datasets.push( {
                  label: "Feminin",
                  data : {{feminin|raw}},
                  fill : false,
                  backgroundColor: randomRgbColor()
            } )
           {% endif %}

       let graph_gender = new Chart(canvas_gender, {
                            type:"bar",
                            data : {
                                labels: {{ roomNames|raw }},
                                datasets: datasets,
                            }, 
                             options: {
                                plugins: {
                                    title: {
                                        display: true,
                                        text: ' Repartition des sexes par classe ',
                                        font: {
                                            size: 24,
                                          
                                            family: 'Helvetica Neue',
                                        },
                                        position: 'bottom',
                                        
                                    }
                                }
                            }
                        });
       $('#select_room').on('change', function() {
            postData = {
              "id":  $(this).val()
            };
            $.ajax({
                type: "GET",
                url: "{{ path('admin_graph_update')}}",
                data: postData,
                datatype: "json",
                success: function (response) {
                        window.location.href = response.url;
                },
                error: function (e) {
                  console.log(e.message);
                }
          });
        });
        
        

         let graph_age_group = new Chart(canvas_age_group, {
                            type:"pie",
                            data : {
                                labels: {{ ageGroupsLabel|raw }},
                                datasets: [{ 
                                  data : {{ ageGroupsWeight|raw }},
                                  backgroundColor: colors_age_group
                                }]
                            }, 
                             options: {
                                plugins: {
                                    title: {
                                        display: true,
                                        text: ' Repartition des tranches d\'ages par classe ',
                                        font: {
                                            size: 24,
                                            family: 'Helvetica Neue',
                                        },
                                        position: 'bottom',
                                    }
                                }
                            }
                        });
        
        let graph_age_group_gender = new Chart(canvas_age_group_gender, {
                           
                    type: 'bubble',
                    data: {
                         datasets: [{
                                label: 'Homme',
                                data: ({{scatterData|raw}}).filter(item => item.sexe === 'homme').map(item => ({
                                    x: item.age,
                                    y: item.sexe === 'homme' ? 1 : 0,
                                    r: item.poids
                                })),
                                backgroundColor: 'blue'
                            }, {
                                label: 'Femme',
                                data: ({{scatterData|raw}}).filter(item => item.sexe === 'femme').map(item => ({
                                    x: item.age,
                                    y: item.sexe === 'femme' ? 1 : 0,
                                    r: item.poids
                                })),
                                backgroundColor: 'pink'
                        }]
                    },
                    options: {
                    scales: {
                        x: {
                            type: 'linear',
                            position: 'bottom',
                            title: {
                                display: true,
                                text: 'Tranche d\'Ã¢ge'
                            }
                        },
                        y: {
                            title: {
                                display: true,
                                text: 'Sexe'
                            }
                        }
                    }},
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    var data = context.dataset.data[context.dataIndex];
                                    var label = 'Age: ' + data.age + ', Sexe: ' + (data.sexe === 1 ? 'Homme' : 'Femme') + ', Poids: ' + data.poids;
                                    return label;
                                }
                            }
                        }
                    }
                    
                    }
                        );

        
       
       $('#select_room').on('change', function() {
            postData = {
              "id":  $(this).val()
            };
            $.ajax({
                type: "GET",
                url: "{{ path('admin_graph_update')}}",
                data: postData,
                datatype: "json",
                success: function (response) {
                        window.location.href = response.url;
                },
                error: function (e) {
                  console.log(e.message);
                }
          });
        });

    </script>
{% endblock %}
 